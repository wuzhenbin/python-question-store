
# 关系型数据库和非关系型数据库的区别？
关系型：MySQL、Oracle、
优势：支持复杂查询。可以用SQL语句方便的在一个表以及多个表之间做非常复杂的数据查询事务支持。
使得对于安全性能很高的数据访问要求得以实现

非关系型：MongoDB、Redis等
优势：性能高。NOSQL是基于键值对的，可以想象成表中的主键和值的对应关系，
而且不需要经过SQL层的解析，所以性能非常高
基于键值对，数据之间没有耦合性，所以非常容易水平扩展

数据库索引（类似于书的目录）类型：
（1）普通索引：没有任何限制
（2）唯一索引：不允许建立索引的列有重复值，但可以有空值
（3）主索引：特殊的唯一索引，不允许有空值
（4）候选索引：唯一性，可以有多个候选索引

优点：加快数据查找的效率
缺点：占用磁盘空间增加了插入和删除的操作时间。
一个表拥有的索引越多，插入和删除的速度越慢，如要求快速录入的系统不宜建过多索引

# 索引实现方式？
B+树
散列索引
位图索引


# SQL里面设置复合索引与单个普通索引的区别？
复合索引只对和索引中排序相同或相反的order by 语句优化
如果存在一个多列索引，任何最左面的索引前缀能被优化器使用。
所以联合索引的顺序不同，影响索引的选择，尽量将值少的放在前面。


# 数据库视图？
视图是从一个或多个表（视图）导出的表，视图与表不同，视图是一个虚表，即视图所对应的数据不进行实际存储，
数据库中只存储视图的定义，在对视图的数据进行操作时，系统根据视图的定义去操作与视图相关联的基本表

优点：
1 简化了操作，把经常使用的数据定义为视图 对于一个查询动作频繁发生的话，我们可以创建视图简化 
2 安全性，用户只能查询和修改能看到的数据 将基表中重要的字段信息，可以不通过视图给用户，用户对视图不可以随意的更改和删除，
可以保证数据的安全性 
3 逻辑上的独立性，屏蔽了真实表的结构带来的影响 视图可以使应用程序和数据库表在一定程度上独立。如果没有视图，应用一定是建立在表上的。
有了视图之后，程序可以建立在视图之上，从而程序与数据库表被视图分割开来 

缺点：
1 性能差数据库必须把视图查询转化成对基本表的查询，如果这个视图是由一个复杂的多表查询所定义，那么，即使是视图的一个简单查询，
数据库也要把它变成一个复杂的结合体，需要花费一定的时间 
2 修改限制当用户试图修改视图的某些信息时，数据库必须把它转化为对基本表的某些信息的修改，对于简单的视图来说，这是很方便的，但是，
对于比较复杂的试图，可能是不可修改的


# 数据库事务？
数据库事务是指作为单个逻辑工作单元执行的一系列操作，要么完全执行，要么完全不执行
性质：
原子性
一致性
隔离性
持久性





